// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –∏–∑ Telnyx
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞

async function addTelnyxNumber(phoneNumber, country = 'US', city = null, region = null) {
  // –û—á–∏—Å—Ç–∫–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞
  const cleaned = phoneNumber.replace(/\D/g, '');
  const formatted = cleaned.startsWith('1') ? `+${cleaned}` : `+1${cleaned}`;
  const areaCode = formatted.substring(2, 5);
  
  console.log(`üìû –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä: ${formatted} (${country})`);
  
  const response = await fetch('https://mqppvcrlvsgrsqelglod.supabase.co/rest/v1/telnyx_phone_numbers', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1xcHB2Y3JsdnNncnNxZWxnbG9kIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc1OTE3MDUsImV4cCI6MjA2MzE2NzcwNX0.My-KiqG1bCMqzUru4m59d4v18N3WGxNoNtFPOFAmhzg',
      'Authorization': `Bearer ${localStorage.getItem('fixlify-auth-token')?.replace(/['"]/g, '')}`
    },
    body: JSON.stringify({
      phone_number: formatted,
      status: 'available',
      country_code: country,
      area_code: areaCode,
      locality: city,
      region: region,
      features: ['sms', 'voice', 'mms'],
      monthly_cost: 0,
      setup_cost: 0,
      purchased_at: new Date().toISOString()
    })
  });

  if (response.ok) {
    console.log('‚úÖ –ù–æ–º–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  } else {
    const error = await response.text();
    if (error.includes('duplicate')) {
      console.log('‚ÑπÔ∏è –≠—Ç–æ—Ç –Ω–æ–º–µ—Ä —É–∂–µ –µ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ');
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    }
  }
}

// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
// addTelnyxNumber('289-819-2158', 'CA', 'Toronto', 'Ontario');
// addTelnyxNumber('416-555-1234', 'CA', 'Toronto', 'Ontario');
// addTelnyxNumber('212-555-1234', 'US', 'New York', 'NY');

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–æ–º–µ—Ä–∞
async function showAllNumbers() {
  const response = await fetch('https://mqppvcrlvsgrsqelglod.supabase.co/rest/v1/telnyx_phone_numbers?order=created_at.desc', {
    headers: {
      'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1xcHB2Y3JsdnNncnNxZWxnbG9kIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc1OTE3MDUsImV4cCI6MjA2MzE2NzcwNX0.My-KiqG1bCMqzUru4m59d4v18N3WGxNoNtFPOFAmhzg'
    }
  });
  
  const numbers = await response.json();
  console.log('\nüìã –í—Å–µ –Ω–æ–º–µ—Ä–∞ –≤ —Å–∏—Å—Ç–µ–º–µ:');
  numbers.forEach(n => {
    const flag = n.country_code === 'CA' ? 'üá®üá¶' : 'üá∫üá∏';
    const location = n.locality ? `${n.locality}, ${n.region}` : n.region || '';
    console.log(`${flag} ${n.phone_number} - ${location} - ${n.status}`);
  });
}

console.log('‚úÖ –§—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
console.log('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: addTelnyxNumber("–Ω–æ–º–µ—Ä", "—Å—Ç—Ä–∞–Ω–∞", "–≥–æ—Ä–æ–¥", "—Ä–µ–≥–∏–æ–Ω")');
console.log('–ò–ª–∏: showAllNumbers() –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –Ω–æ–º–µ—Ä–æ–≤');

// –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–æ–º–µ—Ä–∞
showAllNumbers();

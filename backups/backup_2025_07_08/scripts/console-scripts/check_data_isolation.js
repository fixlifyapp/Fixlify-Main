// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö: user_id vs organization_id
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞

async function checkDataStructure() {
  console.clear();
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ...\n');
  
  // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: { user } } = await window.supabase.auth.getUser();
  console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', {
    id: user?.id,
    email: user?.email
  });
  
  // 2. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: profile } = await window.supabase
    .from('profiles')
    .select('*')
    .eq('id', user?.id)
    .single();
    
  console.log('\nüìã –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
  console.log('- user_id:', profile?.id);
  console.log('- organization_id:', profile?.organization_id);
  console.log('- company_name:', profile?.company_name);
  console.log('- role:', profile?.role);
  
  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
  console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü:');
  
  // Clients
  const { data: clients } = await window.supabase
    .from('clients')
    .select('*')
    .limit(2);
    
  if (clients && clients.length > 0) {
    console.log('\nüë• Clients:');
    const client = clients[0];
    console.log('- id:', client.id);
    console.log('- user_id:', client.user_id);
    console.log('- organization_id:', client.organization_id);
    console.log('- created_by:', client.created_by);
    console.log('–ü–æ–ª—è –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏:', {
      has_user_id: 'user_id' in client,
      has_organization_id: 'organization_id' in client,
      has_created_by: 'created_by' in client
    });
  }
  
  // Jobs
  const { data: jobs } = await window.supabase
    .from('jobs')
    .select('*')
    .limit(2);
    
  if (jobs && jobs.length > 0) {
    console.log('\nüíº Jobs:');
    const job = jobs[0];
    console.log('- id:', job.id);
    console.log('- user_id:', job.user_id);
    console.log('- organization_id:', job.organization_id);
    console.log('- client_id:', job.client_id);
    console.log('–ü–æ–ª—è –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏:', {
      has_user_id: 'user_id' in job,
      has_organization_id: 'organization_id' in job
    });
  }
  
  // Estimates
  const { data: estimates } = await window.supabase
    .from('estimates')
    .select('*')
    .limit(2);
    
  if (estimates && estimates.length > 0) {
    console.log('\nüìÑ Estimates:');
    const estimate = estimates[0];
    console.log('- id:', estimate.id);
    console.log('- user_id:', estimate.user_id);
    console.log('- organization_id:', estimate.organization_id);
    console.log('- client_id:', estimate.client_id);
    console.log('- job_id:', estimate.job_id);
    console.log('–ü–æ–ª—è –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏:', {
      has_user_id: 'user_id' in estimate,
      has_organization_id: 'organization_id' in estimate,
      has_client_id: 'client_id' in estimate
    });
  }
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏
  console.log('\nüîó –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ –¥–∞–Ω–Ω—ã—Ö:');
  
  // –ü–æ–ª—É—á–∞–µ–º estimate —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  const { data: estimateWithRelations } = await window.supabase
    .from('estimates')
    .select(`
      *,
      clients (
        id,
        name,
        email,
        user_id,
        organization_id
      ),
      jobs (
        id,
        client_id,
        user_id,
        organization_id
      )
    `)
    .limit(1)
    .single();
    
  if (estimateWithRelations) {
    console.log('\nEstimate —Å —Å–≤—è–∑—è–º–∏:');
    console.log('Estimate:', {
      user_id: estimateWithRelations.user_id,
      organization_id: estimateWithRelations.organization_id
    });
    
    if (estimateWithRelations.clients) {
      console.log('Client:', {
        user_id: estimateWithRelations.clients.user_id,
        organization_id: estimateWithRelations.clients.organization_id
      });
    }
    
    if (estimateWithRelations.jobs) {
      console.log('Job:', {
        user_id: estimateWithRelations.jobs.user_id,
        organization_id: estimateWithRelations.jobs.organization_id
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    const sameUserId = estimateWithRelations.user_id === estimateWithRelations.clients?.user_id;
    const sameOrgId = estimateWithRelations.organization_id === estimateWithRelations.clients?.organization_id;
    
    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–ª—è—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö:');
    console.log('- –°–æ–≤–ø–∞–¥–∞–µ—Ç user_id:', sameUserId);
    console.log('- –°–æ–≤–ø–∞–¥–∞–µ—Ç organization_id:', sameOrgId);
  }
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS –ø–æ–ª–∏—Ç–∏–∫–∏
  console.log('\nüîí –ß—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏:');
  if (profile?.organization_id) {
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç ORGANIZATION_ID –¥–ª—è –º—É–ª—å—Ç–∏—Ç–µ–Ω–∞–Ω—Ç–Ω–æ—Å—Ç–∏');
    console.log('Organization ID:', profile.organization_id);
  } else {
    console.log('‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç USER_ID (–Ω–µ—Ç organization_id –≤ –ø—Ä–æ—Ñ–∏–ª–µ)');
    console.log('User ID:', user?.id);
  }
  
  // 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
  console.log('1. –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏');
  console.log('2. RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–≤–µ—Ä—è—Ç—å —ç—Ç–æ –ø–æ–ª–µ');
  console.log('3. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–µ');
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ estimate
async function checkEstimateAccess(estimateId) {
  console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ estimate ${estimateId}...`);
  
  const { data, error } = await window.supabase
    .from('estimates')
    .select(`
      *,
      clients!estimates_client_id_fkey(*),
      jobs(*)
    `)
    .eq('id', estimateId)
    .single();
    
  if (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞:', error);
    console.log('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('- RLS –ø–æ–ª–∏—Ç–∏–∫–∞ –±–ª–æ–∫–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø');
    console.log('- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π user_id –∏–ª–∏ organization_id');
  } else {
    console.log('‚úÖ –î–æ—Å—Ç—É–ø –µ—Å—Ç—å!');
    console.log('–î–∞–Ω–Ω—ã–µ:', data);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkDataStructure();

// –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ estimate:
// checkEstimateAccess('estimate-id-here');
